{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["function _createElement(el, attributes = {}, html = '') {\n    const tag = document.createElement(el);\n    Object.keys(attributes).forEach((attr) => {\n        tag.setAttribute(attr, attributes[attr]);\n    });\n    if (html) {\n        tag.innerHTML = html;\n    }\n    return tag;\n}\n\nfunction _wrapAndMask(imageList) {\n    imageList.forEach(img => {\n        const wrapper = _createElement('div', {\n            style: 'position: relative; width: 100%; height: 100%;',\n            class: 'crop-tag-wrap'\n        });\n        img.parentNode.insertBefore(wrapper, img);\n        wrapper.appendChild(img);\n        wrapper.appendChild(_createElement('div', {\n            style: 'position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 1;',\n            class: 'crop-tag-mask'\n        }));\n    });\n}\n\nfunction _resolveImageData(imageList) {\n    const imgData = [];\n    return Promise.all(imageList.map(img => new Promise((resolve) => {\n        if (img.complete) {\n            const hasErrors = img.naturalWidth === 0 || img.naturalHeight === 0;\n            if (hasErrors) {\n                img.classList.add('crop-tag-error');\n            }\n            resolve();\n            imgData.push({\n                src: img.src,\n                width: img.naturalWidth,\n                height: img.naturalHeight,\n                hasErrors\n            });\n        } else {\n            img.onload = () => {\n                resolve();\n                imgData.push({\n                    src: img.src,\n                    width: img.naturalWidth,\n                    height: img.naturalHeight,\n                    hasErrors: false\n                });\n            };\n            img.onerror = () => {\n                img.classList.add('crop-tag-error');\n                resolve();\n                imgData.push({\n                    src: img.src,\n                    width: img.naturalWidth,\n                    height: img.naturalHeight,\n                    hasErrors: true\n                });\n            }\n        }\n    }))).then(() => imgData);\n}\n\nfunction _createMask(image, imageAlt, target) {\n    const imageList = (\n        image instanceof NodeList\n        || image instanceof HTMLCollection\n    )\n        ? [...image] : (\n            image instanceof Node\n        )\n            ? [image] : [];\n    if (imageList.length === 0) {\n        if (typeof image === 'string') {\n            // Possibly URL\n            if (target instanceof Node) {\n                const img = _createElement('img', {\n                    src: image,\n                    alt: (imageAlt || 'CropTag image')\n                });\n                target.appendChild(img);\n                imageList.push(target);\n            } else {\n                throw new TypeError('Target node is unavailable');\n            }\n        } else {\n            throw new TypeError('Image should be a valid DOM element or URL');\n        }\n    }\n    _wrapAndMask(imageList);\n    _resolveImageData(imageList).then((imageData) => console.log(imageData));\n}\n\nexport default class CropTag {\n    constructor(config) {\n        config = config || {};\n        this.config = Object.assign({\n            dots: true, // Enables resize dots\n            edges: true, // Enables edges for drag\n            drag: true, // Enables drag via edges\n            focussedTags: false, // Enables focus and blur effect to get details of only focussed tag\n            image: null, // Image URL or reference\n            imageAlt: null,\n            target: null, // Image target to be used if image URL is passed\n            onDragStart: null, // Callback fires when dragging starts\n            onDrag: null, // Callback fires during drag\n            onDrapStop: null, // Callback fires when dragging stops\n            onResize: null // Callback fires when tag is resized\n        }, config);\n        // Mask image\n        const { image, imageAlt, target } = this.config;\n        _createMask(image, imageAlt, target);\n    }\n    getAll() {\n        // TODO: Returns all tags\n    }\n    get(index) {\n        //TODO: Returns focussed tag if focussedTags is enabled, else returns tag info based on created index\n    }\n    on(event, handler) {\n        //TODO: Event handler to be used for onDragStart, onDrag, onDrapStop and onResize\n    }\n    off(event, handler) {\n        //TODO: Removes event handlers\n    }\n}"],"names":["_createElement","el","attributes","html","tag","document","createElement","Object","keys","forEach","attr","setAttribute","innerHTML","_createMask","image","imageAlt","target","imageList","NodeList","HTMLCollection","Node","length","TypeError","img","src","alt","appendChild","push","wrapper","style","parentNode","insertBefore","_wrapAndMask","imgData","Promise","all","map","resolve","complete","hasErrors","naturalWidth","naturalHeight","classList","add","width","height","onload","onerror","then","_resolveImageData","imageData","console","log","config","assign","dots","edges","drag","focussedTags","onDragStart","onDrag","onDrapStop","onResize","this","index","event","handler"],"mappings":"wrBAAA,SAASA,EAAeC,OAAIC,yDAAa,GAAIC,yDAAO,GAC1CC,EAAMC,SAASC,cAAcL,UACnCM,OAAOC,KAAKN,GAAYO,QAAQ,SAACC,GAC7BN,EAAIO,aAAaD,EAAMR,EAAWQ,MAElCP,IACAC,EAAIQ,UAAYT,GAEbC,EAyDX,SAASS,EAAYC,EAAOC,EAAUC,OAC5BC,EACFH,aAAiBI,UACdJ,aAAiBK,iBAEdL,GACFA,aAAiBM,KAEf,CAACN,GAAS,MACK,IAArBG,EAAUI,OAAc,IACH,iBAAVP,QAaD,IAAIQ,UAAU,mDAXhBN,aAAkBI,YAQZ,IAAIE,UAAU,kCAPdC,EAAMvB,EAAe,MAAO,CAC9BwB,IAAKV,EACLW,IAAMV,GAAY,kBAEtBC,EAAOU,YAAYH,GACnBN,EAAUU,KAAKX,IAxE/B,SAAsBC,GAClBA,EAAUR,QAAQ,SAAAc,OACRK,EAAU5B,EAAe,MAAO,CAClC6B,MAAO,uDACA,kBAEXN,EAAIO,WAAWC,aAAaH,EAASL,GACrCK,EAAQF,YAAYH,GACpBK,EAAQF,YAAY1B,EAAe,MAAO,CACtC6B,MAAO,oFACA,qBAsEfG,CAAaf,GAjEjB,SAA2BA,OACjBgB,EAAU,UACTC,QAAQC,IAAIlB,EAAUmB,IAAI,SAAAb,UAAO,IAAIW,QAAQ,SAACG,MAC7Cd,EAAIe,SAAU,KACRC,EAAiC,IAArBhB,EAAIiB,cAA4C,IAAtBjB,EAAIkB,cAC5CF,GACAhB,EAAImB,UAAUC,IAAI,kBAEtBN,IACAJ,EAAQN,KAAK,CACTH,IAAKD,EAAIC,IACToB,MAAOrB,EAAIiB,aACXK,OAAQtB,EAAIkB,cACZF,UAAAA,SAGJhB,EAAIuB,OAAS,WACTT,IACAJ,EAAQN,KAAK,CACTH,IAAKD,EAAIC,IACToB,MAAOrB,EAAIiB,aACXK,OAAQtB,EAAIkB,cACZF,WAAW,KAGnBhB,EAAIwB,QAAU,WACVxB,EAAImB,UAAUC,IAAI,kBAClBN,IACAJ,EAAQN,KAAK,CACTH,IAAKD,EAAIC,IACToB,MAAOrB,EAAIiB,aACXK,OAAQtB,EAAIkB,cACZF,WAAW,UAItBS,KAAK,kBAAMf,IA8BhBgB,CAAkBhC,GAAW+B,KAAK,SAACE,UAAcC,QAAQC,IAAIF,kCAIjDG,yGACRA,EAASA,GAAU,QACdA,OAAS9C,OAAO+C,OAAO,CACxBC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,cAAc,EACd5C,MAAO,KACPC,SAAU,KACVC,OAAQ,KACR2C,YAAa,KACbC,OAAQ,KACRC,WAAY,KACZC,SAAU,MACXT,SAEiCU,KAAKV,OACzCxC,IADQC,QAAOC,WAAUC,6FAMzBgD,+BAGDC,EAAOC,gCAGND,EAAOC"}